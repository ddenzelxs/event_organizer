const db = require('../db/knex');

// GET semua sesi (opsional: filter by event_id)
exports.getAllSessions = async (req, res) => {
  try {
    const { event_id } = req.query;

    let query = db('event_sessions');
    if (event_id) {
      query = query.where({ event_id });
    }
    const sessions = await query;
    res.json(sessions);
  } catch (err) {
    res.status(500).json({ message: 'Gagal mengambil sesi', error: err.message });
  }
};

// GET satu sesi by ID
exports.getSessionById = async (req, res) => {
  try {
    const session = await db('event_sessions').where({ id: req.params.id }).first();
    if (!session) return res.status(404).json({ message: 'Sesi tidak ditemukan' });
    res.json(session);
  } catch (err) {
    res.status(500).json({ message: 'Gagal mengambil sesi', error: err.message });
  }
};

// POST tambah sesi baru
exports.createSession = async (req, res) => {
  const {
    event_id, name, session_date, session_time,
    speaker, location, max_participants
  } = req.body;

  try {
    const [id] = await db('event_sessions').insert({
      event_id, name, session_date, session_time,
      speaker, location, max_participants
    });
    res.status(201).json({ message: 'Sesi berhasil dibuat', id });
  } catch (err) {
    res.status(500).json({ message: 'Gagal menambahkan sesi', error: err.message });
  }
};

// PUT update sesi
exports.updateSession = async (req, res) => {
  const {
    event_id, name, session_date, session_time,
    speaker, location, max_participants
  } = req.body;

  try {
    const updated = await db('event_sessions').where({ id: req.params.id }).update({
      event_id, name, session_date, session_time,
      speaker, location, max_participants,
      updated_at: db.fn.now()
    });

    if (!updated) return res.status(404).json({ message: 'Sesi tidak ditemukan' });

    res.json({ message: 'Sesi berhasil diperbarui' });
  } catch (err) {
    res.status(500).json({ message: 'Gagal update sesi', error: err.message });
  }
};
